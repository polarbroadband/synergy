// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: monsoon.proto

package monsoon

import (
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RunnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Task string `protobuf:"bytes,2,opt,name=Task,proto3" json:"Task,omitempty"`
}

func (x *RunnerRequest) Reset() {
	*x = RunnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerRequest) ProtoMessage() {}

func (x *RunnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerRequest.ProtoReflect.Descriptor instead.
func (*RunnerRequest) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{0}
}

func (x *RunnerRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RunnerRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

type RunnerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Factor int64  `protobuf:"varint,2,opt,name=Factor,proto3" json:"Factor,omitempty"`
}

func (x *RunnerUpdate) Reset() {
	*x = RunnerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerUpdate) ProtoMessage() {}

func (x *RunnerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerUpdate.ProtoReflect.Descriptor instead.
func (*RunnerUpdate) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{1}
}

func (x *RunnerUpdate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RunnerUpdate) GetFactor() int64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

type RunnerOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *RunnerOutput) Reset() {
	*x = RunnerOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerOutput) ProtoMessage() {}

func (x *RunnerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerOutput.ProtoReflect.Descriptor instead.
func (*RunnerOutput) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{2}
}

func (x *RunnerOutput) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SvcStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Healtz bool   `protobuf:"varint,2,opt,name=Healtz,proto3" json:"Healtz,omitempty"`
	State  string `protobuf:"bytes,3,opt,name=State,proto3" json:"State,omitempty"`
	Error  string `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *SvcStat) Reset() {
	*x = SvcStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcStat) ProtoMessage() {}

func (x *SvcStat) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcStat.ProtoReflect.Descriptor instead.
func (*SvcStat) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{3}
}

func (x *SvcStat) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SvcStat) GetHealtz() bool {
	if x != nil {
		return x.Healtz
	}
	return false
}

func (x *SvcStat) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SvcStat) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SvrStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string     `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	Load      int64      `protobuf:"varint,2,opt,name=Load,proto3" json:"Load,omitempty"`
	Release   string     `protobuf:"bytes,9,opt,name=Release,proto3" json:"Release,omitempty"`
	Instances []*SvcStat `protobuf:"bytes,3,rep,name=Instances,proto3" json:"Instances,omitempty"`
}

func (x *SvrStat) Reset() {
	*x = SvrStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvrStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvrStat) ProtoMessage() {}

func (x *SvrStat) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvrStat.ProtoReflect.Descriptor instead.
func (*SvrStat) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{4}
}

func (x *SvrStat) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SvrStat) GetLoad() int64 {
	if x != nil {
		return x.Load
	}
	return 0
}

func (x *SvrStat) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *SvrStat) GetInstances() []*SvcStat {
	if x != nil {
		return x.Instances
	}
	return nil
}

type OprStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *OprStat) Reset() {
	*x = OprStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OprStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OprStat) ProtoMessage() {}

func (x *OprStat) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OprStat.ProtoReflect.Descriptor instead.
func (*OprStat) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{5}
}

func (x *OprStat) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{6}
}

func (x *Request) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type RR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *_struct.Struct `protobuf:"bytes,2,opt,name=Details,proto3" json:"Details,omitempty"`
}

func (x *RR) Reset() {
	*x = RR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monsoon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RR) ProtoMessage() {}

func (x *RR) ProtoReflect() protoreflect.Message {
	mi := &file_monsoon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RR.ProtoReflect.Descriptor instead.
func (*RR) Descriptor() ([]byte, []int) {
	return file_monsoon_proto_rawDescGZIP(), []int{7}
}

func (x *RR) GetDetails() *_struct.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_monsoon_proto protoreflect.FileDescriptor

var file_monsoon_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x36, 0x0a, 0x0c, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x5d, 0x0a, 0x07, 0x53, 0x76, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x7a, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x7b, 0x0a, 0x07, 0x53, 0x76, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x53,
	0x76, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x1f, 0x0a, 0x07, 0x4f, 0x70, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x02, 0x52, 0x52, 0x12, 0x31, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xdf, 0x03, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x7a, 0x12, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f,
	0x6e, 0x2e, 0x53, 0x76, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x6f,
	0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x53, 0x76,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f,
	0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a,
	0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f,
	0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a,
	0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f,
	0x70, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f,
	0x6f, 0x6e, 0x2e, 0x53, 0x76, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e,
	0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x32, 0xa1,
	0x03, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x7a, 0x12, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e,
	0x53, 0x76, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x7a, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x53, 0x76, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x53, 0x76, 0x63, 0x53, 0x74, 0x61, 0x74, 0x22,
	0x00, 0x12, 0x41, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73,
	0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e,
	0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d,
	0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f,
	0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x10,
	0x2e, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x2f,
	0x73, 0x79, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2f, 0x6d, 0x6f, 0x6e, 0x73, 0x6f, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monsoon_proto_rawDescOnce sync.Once
	file_monsoon_proto_rawDescData = file_monsoon_proto_rawDesc
)

func file_monsoon_proto_rawDescGZIP() []byte {
	file_monsoon_proto_rawDescOnce.Do(func() {
		file_monsoon_proto_rawDescData = protoimpl.X.CompressGZIP(file_monsoon_proto_rawDescData)
	})
	return file_monsoon_proto_rawDescData
}

var file_monsoon_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_monsoon_proto_goTypes = []interface{}{
	(*RunnerRequest)(nil),  // 0: monsoon.RunnerRequest
	(*RunnerUpdate)(nil),   // 1: monsoon.RunnerUpdate
	(*RunnerOutput)(nil),   // 2: monsoon.RunnerOutput
	(*SvcStat)(nil),        // 3: monsoon.SvcStat
	(*SvrStat)(nil),        // 4: monsoon.SvrStat
	(*OprStat)(nil),        // 5: monsoon.OprStat
	(*Request)(nil),        // 6: monsoon.Request
	(*RR)(nil),             // 7: monsoon.RR
	(*_struct.Struct)(nil), // 8: google.protobuf.Struct
}
var file_monsoon_proto_depIdxs = []int32{
	3,  // 0: monsoon.SvrStat.Instances:type_name -> monsoon.SvcStat
	8,  // 1: monsoon.RR.Details:type_name -> google.protobuf.Struct
	6,  // 2: monsoon.Controller.Healtz:input_type -> monsoon.Request
	0,  // 3: monsoon.Controller.CreateRunner:input_type -> monsoon.RunnerRequest
	1,  // 4: monsoon.Controller.ConnectRunner:input_type -> monsoon.RunnerUpdate
	1,  // 5: monsoon.Controller.JoinRunner:input_type -> monsoon.RunnerUpdate
	1,  // 6: monsoon.Controller.StartRunner:input_type -> monsoon.RunnerUpdate
	1,  // 7: monsoon.Controller.StopRunner:input_type -> monsoon.RunnerUpdate
	1,  // 8: monsoon.Controller.UpdateRunner:input_type -> monsoon.RunnerUpdate
	4,  // 9: monsoon.Controller.RegistWorker:input_type -> monsoon.SvrStat
	6,  // 10: monsoon.Worker.Healtz:input_type -> monsoon.Request
	0,  // 11: monsoon.Worker.RunnerHealtz:input_type -> monsoon.RunnerRequest
	0,  // 12: monsoon.Worker.CreateRunner:input_type -> monsoon.RunnerRequest
	1,  // 13: monsoon.Worker.ConnectRunner:input_type -> monsoon.RunnerUpdate
	1,  // 14: monsoon.Worker.StartRunner:input_type -> monsoon.RunnerUpdate
	1,  // 15: monsoon.Worker.StopRunner:input_type -> monsoon.RunnerUpdate
	1,  // 16: monsoon.Worker.UpdateRunner:input_type -> monsoon.RunnerUpdate
	4,  // 17: monsoon.Controller.Healtz:output_type -> monsoon.SvrStat
	3,  // 18: monsoon.Controller.CreateRunner:output_type -> monsoon.SvcStat
	2,  // 19: monsoon.Controller.ConnectRunner:output_type -> monsoon.RunnerOutput
	2,  // 20: monsoon.Controller.JoinRunner:output_type -> monsoon.RunnerOutput
	5,  // 21: monsoon.Controller.StartRunner:output_type -> monsoon.OprStat
	5,  // 22: monsoon.Controller.StopRunner:output_type -> monsoon.OprStat
	5,  // 23: monsoon.Controller.UpdateRunner:output_type -> monsoon.OprStat
	5,  // 24: monsoon.Controller.RegistWorker:output_type -> monsoon.OprStat
	4,  // 25: monsoon.Worker.Healtz:output_type -> monsoon.SvrStat
	3,  // 26: monsoon.Worker.RunnerHealtz:output_type -> monsoon.SvcStat
	3,  // 27: monsoon.Worker.CreateRunner:output_type -> monsoon.SvcStat
	2,  // 28: monsoon.Worker.ConnectRunner:output_type -> monsoon.RunnerOutput
	5,  // 29: monsoon.Worker.StartRunner:output_type -> monsoon.OprStat
	5,  // 30: monsoon.Worker.StopRunner:output_type -> monsoon.OprStat
	5,  // 31: monsoon.Worker.UpdateRunner:output_type -> monsoon.OprStat
	17, // [17:32] is the sub-list for method output_type
	2,  // [2:17] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_monsoon_proto_init() }
func file_monsoon_proto_init() {
	if File_monsoon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monsoon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvrStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OprStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monsoon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monsoon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_monsoon_proto_goTypes,
		DependencyIndexes: file_monsoon_proto_depIdxs,
		MessageInfos:      file_monsoon_proto_msgTypes,
	}.Build()
	File_monsoon_proto = out.File
	file_monsoon_proto_rawDesc = nil
	file_monsoon_proto_goTypes = nil
	file_monsoon_proto_depIdxs = nil
}
